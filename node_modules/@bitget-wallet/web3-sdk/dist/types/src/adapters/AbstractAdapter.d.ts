import EventEmitter from 'eventemitter3';
import { LogoType } from '../constant/platform';
import { BitKeepGlobal, SupportProviderFlag } from '../provider';
type AbstractAdapterOptions = {
    providerFlag: SupportProviderFlag;
    isBitkeep?: boolean;
    debug?: boolean;
};
export declare class AbstractAdapter extends EventEmitter {
    readonly id: string;
    readonly name: string;
    readonly version: string;
    isBitkeep: boolean | undefined;
    providerFlag: SupportProviderFlag;
    private platformManager;
    constructor(Options?: AbstractAdapterOptions);
    getProvider(): import("../provider").WaleltProvider<keyof BitKeepGlobal, keyof BitKeepGlobal> | null;
    /** only support extension */
    getBKWalletInfo(): Promise<{
        id: string;
        name: string;
    } | null>;
    getDeepLinks(): {
        scheme: string;
        universallink: string;
    };
    getLogo(type?: LogoType): string;
    getLogos(): {
        base64: string;
        png: {
            28: string;
            256: string;
        };
        svg: {
            28: string;
            256: string;
        };
    };
    getWalletInfo(): {
        id: string;
        version: string;
        name: string;
        homepage: string;
        shortName: string;
        description: string;
        tags: string[];
        downloadLinks: {
            website: string;
            android: string;
            ios: string;
            chrome: string;
            googlePlay: string;
            appleStore: string;
            testflight: string;
            browserExtension: {
                chrome: string;
                edge: string;
            };
        };
        socialMedia: {
            website: string;
            github: string;
            twitter: string;
            twitters: {
                EN: string;
                CN: string;
                Daily: string;
            };
            medium: string;
            discord: string;
            telegram: string;
            telegrams: {
                EN: string;
                CN: string;
            };
            facebook: string;
            instagram: string;
            youTube: string;
            linkedIn: string;
        };
        logolist: {
            base64: string;
            png: {
                28: string;
                256: string;
            };
            svg: {
                28: string;
                256: string;
            };
        };
        academy: string;
        blog: string;
        deepLinks: {
            scheme: string;
            universallink: string;
        };
    };
    getDownloadLinks(): {
        website: string;
        android: string;
        ios: string;
        chrome: string;
        googlePlay: string;
        appleStore: string;
        testflight: string;
        browserExtension: {
            chrome: string;
            edge: string;
        };
    };
}
export {};
