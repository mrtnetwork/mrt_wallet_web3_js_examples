import { Adapter, AdapterState, WalletReadyState } from '@tronweb3/tronwallet-abstract-adapter';
import type { Transaction, SignedTransaction, AdapterName } from '@tronweb3/tronwallet-abstract-adapter';
import type { Account, LedgerUtils, LedgerWalletConfig } from './LedgerWallet.js';
export type LedgerAdapterConfig = LedgerWalletConfig;
export declare const LedgerAdapterName: AdapterName<"Ledger">;
export declare class LedgerAdapter extends Adapter {
    name: AdapterName<"Ledger">;
    url: string;
    icon: string;
    private _readyState;
    private _state;
    private _connecting;
    private _address;
    private config;
    private _wallet;
    constructor(config?: LedgerAdapterConfig);
    get address(): string | null;
    get state(): AdapterState;
    get connecting(): boolean;
    get readyState(): WalletReadyState;
    get ledgerUtils(): LedgerUtils;
    connect(options?: {
        account: Omit<Account, 'path'>;
    }): Promise<void>;
    disconnect(): Promise<void>;
    signTransaction(transaction: Transaction): Promise<SignedTransaction>;
    signMessage(message: string): Promise<string>;
}
//# sourceMappingURL=adapter.d.ts.map