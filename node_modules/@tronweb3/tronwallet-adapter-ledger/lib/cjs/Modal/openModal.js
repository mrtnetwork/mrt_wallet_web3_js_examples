"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openSelectAccountModal = exports.openVerifyAddressModal = exports.openConnectingModal = void 0;
const jsx_runtime_1 = require("preact/jsx-runtime");
const compat_1 = require("preact/compat");
const ConfirmContent_js_1 = require("./ConfirmContent.js");
const ConnectingContent_js_1 = require("./ConnectingContent.js");
const lang_js_1 = require("./lang.js");
const Modal_js_1 = require("./Modal.js");
const SelectAccount_js_1 = require("./SelectAccount.js");
const style_js_1 = require("./style.js");
function prepareDomNode() {
    const div = document.createElement('div');
    const style = document.createElement('style');
    style.innerHTML = style_js_1.modalStyleSheetContent;
    document.body.append(style);
    document.body.append(div);
    function onClose() {
        div.remove();
        style.remove();
    }
    return {
        onClose,
        div,
    };
}
function openConnectingModal() {
    const { onClose, div } = prepareDomNode();
    const langText = (0, lang_js_1.getLangText)();
    (0, compat_1.render)((0, jsx_runtime_1.jsx)(Modal_js_1.Modal, Object.assign({ title: langText.loadingTitle, onClose: onClose }, { children: (0, jsx_runtime_1.jsx)(ConnectingContent_js_1.ConnectingContent, {}) })), div);
    return onClose;
}
exports.openConnectingModal = openConnectingModal;
function openVerifyAddressModal(address) {
    const { onClose, div } = prepareDomNode();
    const langText = (0, lang_js_1.getLangText)();
    (0, compat_1.render)((0, jsx_runtime_1.jsx)(Modal_js_1.Modal, Object.assign({ width: 550, title: langText.loadingTitle, onClose: onClose }, { children: (0, jsx_runtime_1.jsx)(ConfirmContent_js_1.ConfirmContent, { address: address }) })), div);
    return onClose;
}
exports.openVerifyAddressModal = openVerifyAddressModal;
function openSelectAccountModal(options) {
    const { onClose, div } = prepareDomNode();
    const langText = (0, lang_js_1.getLangText)();
    return new Promise((resolve, reject) => {
        function onConfirm(account) {
            resolve(account);
            onClose();
        }
        function onCancel() {
            reject(new Error('Operation is canceled.'));
            onClose();
        }
        (0, compat_1.render)((0, jsx_runtime_1.jsx)(Modal_js_1.Modal, Object.assign({ title: langText.loadingTitle, onClose: onCancel }, { children: (0, jsx_runtime_1.jsx)(SelectAccount_js_1.SelectAccount, { accounts: options.accounts, selectedIndex: options.selectedIndex || 0, onConfirm: onConfirm, onCancel: onCancel, getAccounts: options.getAccounts }) })), div);
    });
}
exports.openSelectAccountModal = openSelectAccountModal;
//# sourceMappingURL=openModal.js.map