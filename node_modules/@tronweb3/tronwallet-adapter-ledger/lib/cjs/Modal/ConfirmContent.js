"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfirmContent = void 0;
const jsx_runtime_1 = require("preact/jsx-runtime");
const compat_1 = require("preact/compat");
const lang_js_1 = require("./lang.js");
const LedgerIcon_js_1 = require("./LedgerIcon.js");
const LoadingIcon_js_1 = require("./LoadingIcon.js");
function ConfirmContent(props) {
    const langText = (0, compat_1.useMemo)(() => (0, lang_js_1.getLangText)(), []);
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ style: { textAlign: 'center' }, "data-testid": "confirm-content" }, { children: [(0, jsx_runtime_1.jsx)(LedgerIcon_js_1.LedgerIcon, {}), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "ledger-connecting-pop" }, { children: [(0, jsx_runtime_1.jsxs)("ul", Object.assign({ className: "ledger-connecting-pop-content" }, { children: [(0, jsx_runtime_1.jsx)("li", Object.assign({ className: "title", style: { wordBreak: 'break-word' } }, { children: langText.checkTitle })), (0, jsx_runtime_1.jsx)("li", { children: (0, jsx_runtime_1.jsx)("strong", Object.assign({ style: { color: '#B0170D', textAlign: 'left', fontWeight: '600' }, "data-testid": "confirm-content-address" }, { children: props.address })) }), (0, jsx_runtime_1.jsx)("li", { children: langText.checkTip0 }), (0, jsx_runtime_1.jsx)("li", { children: langText.checkTip1 })] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "mt-4" }, { children: [(0, jsx_runtime_1.jsx)(LoadingIcon_js_1.LoadingIcon, {}), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "text-muted" }, { children: (0, jsx_runtime_1.jsx)("span", { children: langText.confirmTip }) })) })] }))] }))] })));
}
exports.ConfirmContent = ConfirmContent;
//# sourceMappingURL=ConfirmContent.js.map