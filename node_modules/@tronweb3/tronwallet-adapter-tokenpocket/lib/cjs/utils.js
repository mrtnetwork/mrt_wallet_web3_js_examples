"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openTokenPocket = exports.isInTokenPocket = exports.supportTokenPocket = void 0;
const tronwallet_abstract_adapter_1 = require("@tronweb3/tronwallet-abstract-adapter");
function supportTokenPocket() {
    return !!(0, tronwallet_abstract_adapter_1.isInMobileBrowser)() && !!window.tronWeb && typeof window.tokenpocket !== 'undefined';
}
exports.supportTokenPocket = supportTokenPocket;
/**
 * Detect if in TokenPocketApp
 * There will be a `tokenpocket` object on window
 */
function isInTokenPocket() {
    return (0, tronwallet_abstract_adapter_1.isInBrowser)() && typeof window.tokenpocket !== 'undefined';
}
exports.isInTokenPocket = isInTokenPocket;
function openTokenPocket() {
    if (!supportTokenPocket() && (0, tronwallet_abstract_adapter_1.isInMobileBrowser)() && !isInTokenPocket()) {
        const { origin, pathname, search, hash } = window.location;
        const url = origin + pathname + search + hash;
        const params = {
            action: 'open',
            actionId: Date.now() + '',
            callbackUrl: 'http://someurl.com',
            blockchain: 'Tron',
            chain: 'Tron',
            url,
            protocol: 'TokenPocket',
            version: '1.0',
        };
        window.location.href = `tpdapp://open?params=${encodeURIComponent(JSON.stringify(params))}`;
        return true;
    }
    return false;
}
exports.openTokenPocket = openTokenPocket;
//# sourceMappingURL=utils.js.map